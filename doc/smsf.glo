\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{cluster?\glossaryentryfield{cluster}{\glsnamefont{cluster}}{A cluster consists of one or more nodes which share the same pMINK daemon type}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{routing?\glossaryentryfield{routing}{\glsnamefont{routing}}{In internetworking, the process of moving a packet of data from source to destination. Routing is usually performed by a dedicated device called a router}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{threat?\glossaryentryfield{threat}{\glsnamefont{threat}}{A circumstance or event that has or indicates the potential to exploit vulnerabilities and to adversely impact (create adverse consequences for) organizational operations, organizational assets (including information and information systems), individuals, other organizations, or society}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{bytecode interpreter?\glossaryentryfield{bcintr}{\glsnamefont{bytecode interpreter}}{A virtual machine, or bytecode interpreter, is a sort of simulation of a computer, usually used to implement a script language. You define an instruction set for this machine according to the needs of your script language. The instructions for the virtual computer are called ""bytecodes""}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{bytecode?\glossaryentryfield{bytecode}{\glsnamefont{bytecode}}{Bytecode is computer object code that is processed by a program, usually referred to as a virtual machine, rather than by the ""real"" computer machine, the hardware processor}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{X.690?\glossaryentryfield{x690}{\glsnamefont{X.690}}{X.690 is an ITU-T standard specifying several ASN.1 encoding formats: Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{ASN.1?\glossaryentryfield{asn1}{\glsnamefont{ASN.1}}{Abstract Syntax Notation One (ASN.1) is a standard and notation that describes rules and structures for representing, encoding, transmitting, and decoding data in telecommunications and computer networking}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{perl?\glossaryentryfield{perl}{\glsnamefont{perl}}{Perl is a family of high-level, general-purpose, interpreted, dynamic programming languages. The languages in this family include Perl 5 and Perl 6}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{boolean?\glossaryentryfield{boolean}{\glsnamefont{boolean}}{In computer science, a Boolean expression is an expression in a programming language that produces a Boolean value when evaluated, i.e. one of true or false. A Boolean expression may be composed of a combination of the Boolean constants true or false, Boolean-typed variables, Boolean-valued operators, and Boolean-valued functions}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{zero-based?\glossaryentryfield{zbased}{\glsnamefont{zero-based}}{Zero-based numbering or index origin = 0 is a way of numbering in which the initial element of a sequence is assigned the index 0, rather than the index 1 as is typical in everyday non-programming circumstances}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{regular expression?\glossaryentryfield{regex}{\glsnamefont{regular expression}}{In theoretical computer science and formal language theory, a regular expression (sometimes called a rational expression) is a sequence of characters that define a search pattern, mainly for use in pattern matching with strings, or string matching, i.e. ""find and replace""-like operations}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{variant?\glossaryentryfield{variant}{\glsnamefont{variant}}{A Variant is a special data type that can contain any kind of data}{\relax }|setentrycounter[]{page}\glsnumberformat}{1}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{13}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{13}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{13}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{13}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{13}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{14}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{14}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{14}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{14}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{15}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{15}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{15}
\glossaryentry{node?\glossaryentryfield{node}{\glsnamefont{node}}{A node is a running instance of pMINK daemon, usually belonging to a cluster}{\relax }|setentrycounter[]{page}\glsnumberformat}{17}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{routing?\glossaryentryfield{routing}{\glsnamefont{routing}}{In internetworking, the process of moving a packet of data from source to destination. Routing is usually performed by a dedicated device called a router}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{threat?\glossaryentryfield{threat}{\glsnamefont{threat}}{A circumstance or event that has or indicates the potential to exploit vulnerabilities and to adversely impact (create adverse consequences for) organizational operations, organizational assets (including information and information systems), individuals, other organizations, or society}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{bytecode interpreter?\glossaryentryfield{bcintr}{\glsnamefont{bytecode interpreter}}{A virtual machine, or bytecode interpreter, is a sort of simulation of a computer, usually used to implement a script language. You define an instruction set for this machine according to the needs of your script language. The instructions for the virtual computer are called ""bytecodes""}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{19}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{21}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{22}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{22}
\glossaryentry{X.690?\glossaryentryfield{x690}{\glsnamefont{X.690}}{X.690 is an ITU-T standard specifying several ASN.1 encoding formats: Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)}{\relax }|setentrycounter[]{page}\glsnumberformat}{22}
\glossaryentry{ASN.1?\glossaryentryfield{asn1}{\glsnamefont{ASN.1}}{Abstract Syntax Notation One (ASN.1) is a standard and notation that describes rules and structures for representing, encoding, transmitting, and decoding data in telecommunications and computer networking}{\relax }|setentrycounter[]{page}\glsnumberformat}{22}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{22}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{22}
\glossaryentry{boolean?\glossaryentryfield{boolean}{\glsnamefont{boolean}}{In computer science, a Boolean expression is an expression in a programming language that produces a Boolean value when evaluated, i.e. one of true or false. A Boolean expression may be composed of a combination of the Boolean constants true or false, Boolean-typed variables, Boolean-valued operators, and Boolean-valued functions}{\relax }|setentrycounter[]{page}\glsnumberformat}{35}
\glossaryentry{perl?\glossaryentryfield{perl}{\glsnamefont{perl}}{Perl is a family of high-level, general-purpose, interpreted, dynamic programming languages. The languages in this family include Perl 5 and Perl 6}{\relax }|setentrycounter[]{page}\glsnumberformat}{35}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{35}
\glossaryentry{zero-based?\glossaryentryfield{zbased}{\glsnamefont{zero-based}}{Zero-based numbering or index origin = 0 is a way of numbering in which the initial element of a sequence is assigned the index 0, rather than the index 1 as is typical in everyday non-programming circumstances}{\relax }|setentrycounter[]{page}\glsnumberformat}{35}
\glossaryentry{zero-based?\glossaryentryfield{zbased}{\glsnamefont{zero-based}}{Zero-based numbering or index origin = 0 is a way of numbering in which the initial element of a sequence is assigned the index 0, rather than the index 1 as is typical in everyday non-programming circumstances}{\relax }|setentrycounter[]{page}\glsnumberformat}{35}
\glossaryentry{perl?\glossaryentryfield{perl}{\glsnamefont{perl}}{Perl is a family of high-level, general-purpose, interpreted, dynamic programming languages. The languages in this family include Perl 5 and Perl 6}{\relax }|setentrycounter[]{page}\glsnumberformat}{37}
\glossaryentry{regular expression?\glossaryentryfield{regex}{\glsnamefont{regular expression}}{In theoretical computer science and formal language theory, a regular expression (sometimes called a rational expression) is a sequence of characters that define a search pattern, mainly for use in pattern matching with strings, or string matching, i.e. ""find and replace""-like operations}{\relax }|setentrycounter[]{page}\glsnumberformat}{37}
\glossaryentry{regular expression?\glossaryentryfield{regex}{\glsnamefont{regular expression}}{In theoretical computer science and formal language theory, a regular expression (sometimes called a rational expression) is a sequence of characters that define a search pattern, mainly for use in pattern matching with strings, or string matching, i.e. ""find and replace""-like operations}{\relax }|setentrycounter[]{page}\glsnumberformat}{37}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{38}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{38}
\glossaryentry{threat?\glossaryentryfield{threat}{\glsnamefont{threat}}{A circumstance or event that has or indicates the potential to exploit vulnerabilities and to adversely impact (create adverse consequences for) organizational operations, organizational assets (including information and information systems), individuals, other organizations, or society}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{48}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{49}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{49}
\glossaryentry{variant?\glossaryentryfield{variant}{\glsnamefont{variant}}{A Variant is a special data type that can contain any kind of data}{\relax }|setentrycounter[]{page}\glsnumberformat}{49}
\glossaryentry{variant?\glossaryentryfield{variant}{\glsnamefont{variant}}{A Variant is a special data type that can contain any kind of data}{\relax }|setentrycounter[]{page}\glsnumberformat}{49}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{56}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{56}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{58}
\glossaryentry{lua?\glossaryentryfield{lua}{\glsnamefont{lua}}{Lua is a lightweight multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform since it is written in ANSI C, and has a relatively simple C API}{\relax }|setentrycounter[]{page}\glsnumberformat}{58}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{62}
\glossaryentry{rule?\glossaryentryfield{rule}{\glsnamefont{rule}}{A piece of system logic that is evaluated by \acrfull {rpe}}{\relax }|setentrycounter[]{page}\glsnumberformat}{62}
\glossaryentry{perl?\glossaryentryfield{perl}{\glsnamefont{perl}}{Perl is a family of high-level, general-purpose, interpreted, dynamic programming languages. The languages in this family include Perl 5 and Perl 6}{\relax }|setentrycounter[]{page}\glsnumberformat}{62}
\glossaryentry{regular expression?\glossaryentryfield{regex}{\glsnamefont{regular expression}}{In theoretical computer science and formal language theory, a regular expression (sometimes called a rational expression) is a sequence of characters that define a search pattern, mainly for use in pattern matching with strings, or string matching, i.e. ""find and replace""-like operations}{\relax }|setentrycounter[]{page}\glsnumberformat}{62}
\glossaryentry{daemon?\glossaryentryfield{daemon}{\glsnamefont{daemon}}{Daemon is a computer program that runs as a background process, rather than being under the direct control of an interactive user}{\relax }|setentrycounter[]{page}\glsnumberformat}{63}
\glossaryentry{X.690?\glossaryentryfield{x690}{\glsnamefont{X.690}}{X.690 is an ITU-T standard specifying several ASN.1 encoding formats: Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)}{\relax }|setentrycounter[]{page}\glsnumberformat}{63}
\glossaryentry{ASN.1?\glossaryentryfield{asn1}{\glsnamefont{ASN.1}}{Abstract Syntax Notation One (ASN.1) is a standard and notation that describes rules and structures for representing, encoding, transmitting, and decoding data in telecommunications and computer networking}{\relax }|setentrycounter[]{page}\glsnumberformat}{63}
