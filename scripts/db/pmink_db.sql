-- MySQL Script generated by MySQL Workbench
-- Fri 09 Dec 2016 10:55:55 PM CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `Direction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Direction` (
  `Id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;


-- -----------------------------------------------------
-- Table `SmsSizeType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SmsSizeType` (
  `Id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Name` VARCHAR(150) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;


-- -----------------------------------------------------
-- Table `FilterAction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FilterAction` (
  `Id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SmsEncoding`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SmsEncoding` (
  `Id` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TypeOfNumber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TypeOfNumber` (
  `Id` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PduType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PduType` (
  `Id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SmsStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SmsStatus` (
  `Id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ErrorType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ErrorType` (
  `Id` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Sms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Sms` (
  `Id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `DirectionId` INT NOT NULL COMMENT '',
  `SmsSizeTypeId` INT NOT NULL COMMENT '',
  `PduId` INT NULL COMMENT '',
  `FilterActionId` INT NULL COMMENT '',
  `SmsStatusId` INT NULL COMMENT '',
  `FilterExitPoint` VARCHAR(20) NULL COMMENT '',
  `FilterExitPointCsum` BIGINT NULL COMMENT '',
  `SourceIp` BINARY(16) NULL COMMENT '',
  `DestinationIp` BINARY(16) NULL COMMENT '',
  `SourcePort` SMALLINT UNSIGNED NULL COMMENT '',
  `DestinationPort` SMALLINT UNSIGNED NULL COMMENT '',
  `SystemId` VARCHAR(45) NULL COMMENT '',
  `SystemIdCsum` BIGINT NULL COMMENT '',
  `CalledGt` VARCHAR(30) NULL COMMENT '',
  `CalledGtCsum` BIGINT NULL COMMENT '',
  `CallingGt` VARCHAR(30) NULL COMMENT '',
  `CallingGtCsum` BIGINT NULL COMMENT '',
  `Scda` VARCHAR(30) NULL COMMENT '',
  `ScdaCsum` BIGINT NULL COMMENT '',
  `Scoa` VARCHAR(30) NULL COMMENT '',
  `ScoaCsum` BIGINT NULL COMMENT '',
  `Imsi` VARCHAR(30) NULL COMMENT '',
  `ImsiCsum` BIGINT NULL COMMENT '',
  `Msisdn` VARCHAR(30) NULL COMMENT '',
  `MsisdnCsum` BIGINT NULL COMMENT '',
  `SmsDestination` VARCHAR(30) NULL COMMENT '',
  `SmsDestinationCsum` BIGINT NULL COMMENT '',
  `SmsOriginating` VARCHAR(30) NULL COMMENT '',
  `SmsOriginatingCsum` BIGINT NULL COMMENT '',
  `SmsText` VARBINARY(300) NULL COMMENT '',
  `SmsTextCsum` BIGINT NULL COMMENT '',
  `Timestamp` DATETIME NULL COMMENT '',
  `SmsTextEncId` INT NULL COMMENT '',
  `SmsDestinationEncId` INT NULL COMMENT '',
  `SmsOriginatingEncId` INT NULL COMMENT '',
  `DestinationPointCode` INT NULL COMMENT '',
  `OriginatingPointCode` INT NULL COMMENT '',
  `TcapSid` INT UNSIGNED NULL COMMENT '',
  `TcapDid` INT UNSIGNED NULL COMMENT '',
  `AppCtxOid` VARCHAR(45) NULL COMMENT '',
  `SmsPartnum` INT NULL COMMENT '',
  `SmsParts` INT NULL COMMENT '',
  `SmsMessageId` INT NULL COMMENT '',
  `ErrorTypeId` INT NULL COMMENT '',
  `ErrorCode` INT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '',
  INDEX `fk_sms_type_idx` (`SmsSizeTypeId` ASC)  COMMENT '',
  INDEX `fk_sms_direction1_idx` (`DirectionId` ASC)  COMMENT '',
  INDEX `fk_sms_filter_action1_idx` (`FilterActionId` ASC)  COMMENT '',
  INDEX `fk_sms_SmsEncoding1_idx` (`SmsTextEncId` ASC)  COMMENT '',
  INDEX `fk_sms_TypeOfNumber1_idx` (`SmsDestinationEncId` ASC)  COMMENT '',
  INDEX `fk_sms_TypeOfNumber2_idx` (`SmsOriginatingEncId` ASC)  COMMENT '',
  INDEX `fk_sms_PDUType1_idx` (`PduId` ASC)  COMMENT '',
  INDEX `fk_sms_sms_status1_idx` (`SmsStatusId` ASC)  COMMENT '',
  INDEX `fk_sms_ErrorType1_idx` (`ErrorTypeId` ASC)  COMMENT '',
  CONSTRAINT `fk_sms_type`
    FOREIGN KEY (`SmsSizeTypeId`)
    REFERENCES `SmsSizeType` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_direction1`
    FOREIGN KEY (`DirectionId`)
    REFERENCES `Direction` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_filter_action1`
    FOREIGN KEY (`FilterActionId`)
    REFERENCES `FilterAction` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_SmsEncoding1`
    FOREIGN KEY (`SmsTextEncId`)
    REFERENCES `SmsEncoding` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_TypeOfNumber1`
    FOREIGN KEY (`SmsDestinationEncId`)
    REFERENCES `TypeOfNumber` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_TypeOfNumber2`
    FOREIGN KEY (`SmsOriginatingEncId`)
    REFERENCES `TypeOfNumber` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_PDUType1`
    FOREIGN KEY (`PduId`)
    REFERENCES `PduType` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_sms_status1`
    FOREIGN KEY (`SmsStatusId`)
    REFERENCES `SmsStatus` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sms_ErrorType1`
    FOREIGN KEY (`ErrorTypeId`)
    REFERENCES `ErrorType` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_general_ci;


-- -----------------------------------------------------
-- Table `GSMMAPLocalErrorcode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GSMMAPLocalErrorcode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TCAPDialogueError`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCAPDialogueError` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(150) NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TCAPP_AbortCause`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCAPP_AbortCause` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(150) NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SMPPErrorCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SMPPErrorCode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(150) NOT NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `SriType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SriType` (
  `Id` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Sri`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Sri` (
  `Id` BIGINT NOT NULL AUTO_INCREMENT COMMENT '',
  `SriTypeId` INT NOT NULL COMMENT '',
  `OriginatingPointCode` INT NULL COMMENT '',
  `DestinationPointCode` INT NULL COMMENT '',
  `CalledGt` VARCHAR(30) NULL COMMENT '',
  `CallingGt` VARCHAR(30) NULL COMMENT '',
  `TcapSid` INT UNSIGNED NULL COMMENT '',
  `TcapDid` INT UNSIGNED NULL COMMENT '',
  `AppCtxOid` VARCHAR(100) NULL COMMENT '',
  `Imsi` VARCHAR(30) NULL COMMENT '',
  `Msisdn` VARCHAR(30) NULL COMMENT '',
  `Nnn` VARCHAR(30) NULL COMMENT '',
  `An` VARCHAR(30) NULL COMMENT '',
  `Sca` VARCHAR(30) NULL COMMENT '',
  `Timestamp` DATETIME NULL COMMENT '',
  `ErrorTypeId` INT NULL COMMENT '',
  `ErrorCode` SMALLINT UNSIGNED NULL COMMENT '',
  PRIMARY KEY (`Id`)  COMMENT '',
  INDEX `fk_sri_sri_type1` (`SriTypeId` ASC)  COMMENT '',
  INDEX `fk_sri_ErrorType1` (`ErrorTypeId` ASC)  COMMENT '',
  CONSTRAINT `fk_sri_sri_type10`
    FOREIGN KEY (`SriTypeId`)
    REFERENCES `SriType` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sri_ErrorType10`
    FOREIGN KEY (`ErrorTypeId`)
    REFERENCES `ErrorType` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SCCPErrorCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SCCPErrorCode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TCAP_GeneralProblemErrorCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCAP_GeneralProblemErrorCode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TCAP_InvokeProblemErrorCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCAP_InvokeProblemErrorCode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TCAP_ReturnResultProblemErrorCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCAP_ReturnResultProblemErrorCode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TCAP_ReturnErrorProblemErrorCode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TCAP_ReturnErrorProblemErrorCode` (
  `Code` INT NOT NULL COMMENT '',
  `Name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`Code`)  COMMENT '')
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Direction`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `Direction` (`Id`, `Name`) VALUES (1, 'MO');
INSERT INTO `Direction` (`Id`, `Name`) VALUES (2, 'MT');

COMMIT;


-- -----------------------------------------------------
-- Data for table `SmsSizeType`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `SmsSizeType` (`Id`, `Name`) VALUES (1, 'SINGLE');
INSERT INTO `SmsSizeType` (`Id`, `Name`) VALUES (2, 'CONCATENATED');
INSERT INTO `SmsSizeType` (`Id`, `Name`) VALUES (3, 'UNKNOWN');

COMMIT;


-- -----------------------------------------------------
-- Data for table `FilterAction`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `FilterAction` (`Id`, `Name`) VALUES (1, 'ACCEPTED');
INSERT INTO `FilterAction` (`Id`, `Name`) VALUES (2, 'REJECTED');

COMMIT;


-- -----------------------------------------------------
-- Data for table `SmsEncoding`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (0, 'DEFAULT');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (4, '8bit');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (8, 'UCS2');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (12, 'RESERVED');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1000, 'DEFAULT');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1001, 'IA5_ASCII');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1002, '_8BIT_BINARY_1');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1003, 'ISO_8859_1');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1004, '_8BIT_BINARY_2');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1005, 'JIS');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1006, 'ISO_8859_5');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1007, 'ISO_8859_8');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1008, 'UCS2');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1009, 'PICTOGRAM');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1010, 'ISO_2011_JP');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1013, 'EXTENDED_KANJI');
INSERT INTO `SmsEncoding` (`Id`, `Name`) VALUES (1014, 'KS_C_5601');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TypeOfNumber`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (0, 'UNKNOWN');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (16, 'INTERNATIONAL');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (32, 'NATIONAL');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (48, 'NETWORK SPECIFIC');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (64, 'SUBSCRIBER NUMBER');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (80, 'ALPHANUMERIC');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (96, 'ABBREVIATED');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (112, 'RESERVED');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1000, 'UNKNOWN');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1001, 'INTERNATIONAL');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1002, 'NATIONAL');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1003, 'NETWORK_SPECIFIC');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1004, 'SUBSCRIBER_NUMBER');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1005, 'ALPHANUMERIC');
INSERT INTO `TypeOfNumber` (`Id`, `Name`) VALUES (1006, 'ABBREVIATED');

COMMIT;


-- -----------------------------------------------------
-- Data for table `PduType`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `PduType` (`Id`, `Name`) VALUES (1, 'SMS-TPDU');
INSERT INTO `PduType` (`Id`, `Name`) VALUES (2, 'SMPP-PDU');

COMMIT;


-- -----------------------------------------------------
-- Data for table `SmsStatus`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `SmsStatus` (`Id`, `Name`) VALUES (1, 'OK');
INSERT INTO `SmsStatus` (`Id`, `Name`) VALUES (2, 'Error');
INSERT INTO `SmsStatus` (`Id`, `Name`) VALUES (3, 'Unknown');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ErrorType`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (1, 'TCAP Component error national');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (2, 'TCAP Component error private');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (3, 'TCAP P-Abort error');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (4, 'TCAP Dialogue error user');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (5, 'TCAP Dialogue error service provider');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (10, 'GSM MAP Error');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (11, 'No reply');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (12, 'SMPP Error');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (6, 'TCAP Component Reject-General problem');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (7, 'TCAP Component Reject-Invoke problem');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (8, 'TCAP Component Reject-ReturnResult problem');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (9, 'TCAP Component Reject-ReturnError problem');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (13, 'SCCP Error');
INSERT INTO `ErrorType` (`Id`, `Name`) VALUES (14, 'Unknown error');

COMMIT;


-- -----------------------------------------------------
-- Data for table `GSMMAPLocalErrorcode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (34, 'systemFailure');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (35, 'dataMissing');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (36, 'unexpectedDataValue');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (21, 'facilityNotSupported');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (28, 'incompatibleTerminal');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (51, 'resourceLimitation');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (1, 'unknownSubscriber');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (44, 'numberChanged');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (3, 'unknownMSC');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (5, 'unidentifiedSubscriber');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (7, 'unknownEquipment');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (8, 'roamingNotAllowed');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (9, 'illegalSubscriber');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (12, 'illegalEquipment');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (10, 'bearerServiceNotProvisioned');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (11, 'teleserviceNotProvisioned');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (25, 'noHandoverNumberAvailable');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (26, 'subsequentHandoverFailure');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (42, 'targetCellOutsideGroupCallArea');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (40, 'tracingBufferFull');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (39, 'noRoamingNumberAvailable');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (27, 'absentSubscriber');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (45, 'busySubscriber');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (46, 'noSubscriberReply');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (13, 'callBarred');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (14, 'forwardingViolation');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (47, 'forwardingFailed');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (15, 'cug-Reject');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (48, 'or-NotAllowed');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (49, 'ati-NotAllowed');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (60, 'atsi-NotAllowed');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (61, 'atm-NotAllowed');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (62, 'informationNotAvailabl');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (16, 'illegalSS-Operation');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (17, 'ss-ErrorStatus');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (18, 'ss-NotAvailable');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (19, 'ss-SubscriptionViolatio');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (20, 'ss-Incompatibility');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (71, 'unknownAlphabe');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (72, 'ussd-Busy');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (37, 'pw-RegistrationFailur');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (38, 'negativePW-Check');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (43, 'numberOfPW-AttemptsViolation');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (29, 'shortTermDenial');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (30, 'longTermDenial');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (31, 'subscriberBusyForMT-SMS');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (32, 'sm-DeliveryFailure');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (33, 'messageWaitingListFull');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (6, 'absentSubscriberSM');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (50, 'noGroupCallNumberAvailable');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (52, 'unauthorizedRequestingNetwork');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (53, 'unauthorizedLCSClient');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (54, 'positionMethodFailure');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (58, 'unknownOrUnreachableLCSClient');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (59, 'mm-EventNotSupported');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (4, 'secureTransportError');
INSERT INTO `GSMMAPLocalErrorcode` (`Code`, `Name`) VALUES (9999, 'NOT INCLUDED');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TCAPDialogueError`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TCAPDialogueError` (`Code`, `Name`) VALUES (0, 'null');
INSERT INTO `TCAPDialogueError` (`Code`, `Name`) VALUES (1, 'no-reason-given');
INSERT INTO `TCAPDialogueError` (`Code`, `Name`) VALUES (2, 'application-context-name-not-supported/no-common-dialogue-portion');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TCAPP_AbortCause`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TCAPP_AbortCause` (`Code`, `Name`) VALUES (0, 'unrecognizedMessageType');
INSERT INTO `TCAPP_AbortCause` (`Code`, `Name`) VALUES (1, 'unrecognizedTransactionID');
INSERT INTO `TCAPP_AbortCause` (`Code`, `Name`) VALUES (2, 'badlyFormattedTransactionPortion');
INSERT INTO `TCAPP_AbortCause` (`Code`, `Name`) VALUES (3, 'incorrectTransactionPortion');
INSERT INTO `TCAPP_AbortCause` (`Code`, `Name`) VALUES (4, 'resourceLimitation');
INSERT INTO `TCAPP_AbortCause` (`Code`, `Name`) VALUES (9999, 'NOT INCLUDED');

COMMIT;


-- -----------------------------------------------------
-- Data for table `SMPPErrorCode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (0, 'No Error');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (1, 'Message Length is invalid');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (2, 'Command Length is invalid');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (3, 'Invalid Command ID');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (4, 'Incorrect BIND Status for given command');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (5, 'ESME Already in Bound State');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (6, 'Invalid Priority Flag');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (7, 'Invalid Registered Delivery Flag');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (8, 'System Error');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (10, 'Invalid Source Address');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (11, 'Invalid Dest Addr');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (12, 'Message ID is invalid');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (13, 'Bind Failed');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (14, 'Invalid Password');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (15, 'Invalid System ID');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (17, 'Cancel SM Failed');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (19, 'Replace SM Failed');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (20, 'Message Queue Full');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (21, 'Invalid Service Type');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (51, 'Invalid number of destinations');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (52, 'Invalid Distribution List name');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (64, 'Destination flag is invalid (submit_multi)');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (66, 'Invalid ‘submit with replace’ request');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (67, 'Invalid esm_class field data');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (68, 'Cannot Submit to Distribution List');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (69, 'submit_sm or submit_multi failed');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (72, 'Invalid Source address TON');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (73, 'Invalid Source address NPI');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (74, 'Invalid Destination address TON');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (75, 'Invalid Destination address NPI');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (83, 'Invalid system_type field');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (84, 'Invalid replace_if_present flag');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (85, 'Invalid number of messages');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (88, 'Throttling error (ESME has exceeded allowed message limits)');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (97, 'Invalid Scheduled Delivery Time');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (98, 'Invalid message validity period (Expiry time)');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (99, 'Predefined Message Invalid or Not Found');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (100, 'ESME Receiver Temporary App Error Code');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (101, 'ESME Receiver Permanent App Error Code');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (102, 'ESME Receiver Reject Message Error Code');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (103, 'query_sm request failed');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (192, 'Error in the optional part of the PDU Body');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (193, 'Optional Parameter not allowed');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (194, 'Invalid Parameter Length');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (195, 'Expected Optional Parameter missing');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (196, 'Invalid Optional Parameter Value');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (254, 'Delivery Failure');
INSERT INTO `SMPPErrorCode` (`Code`, `Name`) VALUES (255, 'Unknown Error');

COMMIT;


-- -----------------------------------------------------
-- Data for table `SriType`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `SriType` (`Id`, `Name`) VALUES (1, 'SM - Short message');

COMMIT;


-- -----------------------------------------------------
-- Data for table `SCCPErrorCode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (0, 'no translation for an address of such nature');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (1, 'no translation for this specific address');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (2, 'subsystem congestion');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (3, 'subsystem failure');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (4, 'unequipped user');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (5, 'MTP failure');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (6, 'network congestion');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (7, 'unqualified');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (8, 'error in message transport');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (9, 'error in local processing');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (10, 'destination cannot perform reassembly');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (11, 'SCCP failure');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (12, 'hop counter violation');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (13, 'segmentation not supported');
INSERT INTO `SCCPErrorCode` (`Code`, `Name`) VALUES (14, 'segmentation failure');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TCAP_GeneralProblemErrorCode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TCAP_GeneralProblemErrorCode` (`Code`, `Name`) VALUES (0, 'unrecognizedComponent');
INSERT INTO `TCAP_GeneralProblemErrorCode` (`Code`, `Name`) VALUES (1, 'mistypedComponent');
INSERT INTO `TCAP_GeneralProblemErrorCode` (`Code`, `Name`) VALUES (2, 'badlyStructuredComponent');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TCAP_InvokeProblemErrorCode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (0, 'duplicateInvokeID');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (1, 'unrecognizedOperation');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (2, 'mistypedParameter');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (3, 'resourceLimitation');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (4, 'initiatingRelease');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (5, 'unrecognizedLinkedID');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (6, 'linkedResponseUnexpected');
INSERT INTO `TCAP_InvokeProblemErrorCode` (`Code`, `Name`) VALUES (7, 'unexpectedLinkedOperation');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TCAP_ReturnResultProblemErrorCode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TCAP_ReturnResultProblemErrorCode` (`Code`, `Name`) VALUES (0, 'unrecognizedInvokeID');
INSERT INTO `TCAP_ReturnResultProblemErrorCode` (`Code`, `Name`) VALUES (1, 'returnResultUnexpected');
INSERT INTO `TCAP_ReturnResultProblemErrorCode` (`Code`, `Name`) VALUES (2, 'mistypedParameter');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TCAP_ReturnErrorProblemErrorCode`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `TCAP_ReturnErrorProblemErrorCode` (`Code`, `Name`) VALUES (0, 'unrecognizedInvokeID');
INSERT INTO `TCAP_ReturnErrorProblemErrorCode` (`Code`, `Name`) VALUES (1, 'returnErrorUnexpected');
INSERT INTO `TCAP_ReturnErrorProblemErrorCode` (`Code`, `Name`) VALUES (2, 'unrecognizedError');
INSERT INTO `TCAP_ReturnErrorProblemErrorCode` (`Code`, `Name`) VALUES (3, 'unexpectedError');
INSERT INTO `TCAP_ReturnErrorProblemErrorCode` (`Code`, `Name`) VALUES (4, 'mistypedParameter');

COMMIT;

