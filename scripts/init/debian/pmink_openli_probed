#!/bin/sh
### BEGIN INIT INFO
# Provides:          pmink_openli_probed
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start OpenLI Probe Daemon
# Description:       Start OpenLI Probe Daemon
### END INIT INFO

set -e

ME=`basename "$0"`
PMINK_VAR="/usr/local/pmink/var"
PROBED="/usr/local/pmink/bin/openli_probed"
DEFAULTS="/etc/default/$ME"
ARGS=""
# Check for daemon presence
[ -x "$PROBED" ] || exit 0

# Include defaults if available
[ -f "$DEFAULTS" ] && . "$DEFAULTS"

# Get lsb functions
. /lib/lsb/init-functions


do_start() {
  # set id
  if [ ! -z "$DAEMON_ID" ]; then
    ARGS="$ARGS -i $DAEMON_ID"
  else
    echo "Cannot start, missing daemon id!"
    return 1
  fi
  # configd counter
  CC=0
  # process config connections
  for cfgd in $CFGD_NODES
  do
    ARGS="$ARGS -c $cfgd"
    CC=$((CC + 1))
  done
  # minimum one cfgd connection is required
  if [ $CC -eq 0 ]; then
    echo "Cannot start, missing config daemon connection!"
    return 1
  fi
  # mediation node
  if [ ! -z $MEDIATION_NODE ]; then
    ARGS="$ARGS -m $MEDIATION_NODE"
  fi
  # --r14p-streams
  if [ ! -z $R14P_STREAMS ]; then
    ARGS="$ARGS --r14p-streams=$R14P_STREAMS"
  fi
  # --r14p-stimeout
  if [ ! -z $R14P_STIMEOUT ]; then
    ARGS="$ARGS --r14p-stimeout=$R14P_STIMEOUT"
  fi
  # --r14p-smsg-pool
  if [ ! -z $R14P_SMSG_POOL ]; then
    ARGS="$ARGS --r14p-smsg-pool=$R14P_SMSG_POOL"
  fi
  # --r14p-sparam-pool
  if [ ! -z $R14P_SPARAM_POOL ]; then
    ARGS="$ARGS --r14p-sparam-pool=$R14P_SPARAM_POOL"
  fi
  # start
  log_begin_msg "Starting pMINK OpenLI Probe Daemon..."
  # core dump
  if [ $CORE_DUMP -eq 1 ]; then
    ulimit -c unlimited
  else
    ulimit -c 0
  fi
  start-stop-daemon --start --background --make-pidfile --chdir $PMINK_VAR --pidfile $PMINK_VAR/$ME.pid --exec $PROBED -- $ARGS
  log_end_msg $?
  return 0
}


case "$1" in
  start)
    do_start
    ;;
  stop)
    log_begin_msg "Stopping pMINK OpenLI Probe Daemon..."
    start-stop-daemon --stop --retry 10 --pidfile $PMINK_VAR/$ME.pid
    log_end_msg $?
    rm -f $PMINK_VAR/$ME.pid
    ;;
  restart|reload|force-reload) 
    $0 stop
    sleep 1
    $0 start
    ;;
  status)
    status_of_proc -p $PMINK_VAR/$ME.pid
    ;;
  *)
    echo "Usage: /etc/init.d/pmink_openli_probed {start|stop|restart|reload|force-reload|status}"
    exit 1
esac

